المحاضرة 4: الدرس 21 - فهم القوائم في بايثون

صباح الخير، أيها الطلاب!
اليوم، سنتناول مفهوم القوائم في بايثون من خلال كود بسيط. سنقوم بتحليل كل سطر من الكود وسأقدم لكم أمثلة لفهم أفضل. دعونا نبدأ.

1. تعريف القائمة
names = ["ahmed", "jermaine"]
في هذا السطر، نقوم بإنشاء قائمة باسم names تحتوي على عنصرين: "ahmed" و "jermaine". القوائم في بايثون تسمح بتخزين مجموعة من العناصر، ويمكن تعديل محتواها بسهولة.
مثال: إذا أردنا إضافة أسماء جديدة إلى القائمة، يمكننا القيام بذلك لاحقًا.

2. طباعة القائمة
print(names)
هنا، نقوم بطباعة محتويات قائمة names. الناتج سيكون: ['ahmed', 'jermaine']. هذا يساعدنا على رؤية العناصر التي نمتلكها في القائمة.

3. إضافة عنصر إلى القائمة
names.append("hossam")
في هذا السطر، نستخدم دالة append لإضافة اسم "hossam" إلى نهاية القائمة. القوائم تسمح لنا بإضافة عناصر جديدة بسهولة.
مثال: الآن، لدينا قائمة تحتوي على ثلاثة أسماء: "ahmed"، "jermaine"، و "hossam".

4. إزالة عنصر من القائمة
names.remove("ahmed")
هنا، نقوم بإزالة العنصر "ahmed" من القائمة باستخدام دالة remove. يتطلب ذلك أن يكون العنصر موجودًا في القائمة.
مثال: بعد هذه العملية، ستكون القائمة تحتوي على "jermaine" و "hossam".

5. إدخال عنصر في موضع محدد
names.insert(2, "nasser")
في هذا السطر، نستخدم دالة insert لإضافة "nasser" في الموضع الثالث (index 2) من القائمة.
مثال: الآن، القائمة تحتوي على "jermaine"، "hossam"، و "nasser".

6. إدخال عنصر آخر في مواضع مختلفة
names.insert(1, "nasser")
names.insert(0, "nasser")
هنا، نقوم بإدخال "nasser" في الموضع الثاني (index 1) ثم في الموضع الأول (index 0).
مثال: بعد هذه العمليات، ستحتوي القائمة على: ["nasser", "nasser", "jermaine", "hossam", "nasser"].

7. تغيير قيمة عنصر في القائمة
names[2] = "abdo"
في هذا السطر، نقوم بتغيير العنصر في الموضع الثالث (index 2) إلى "abdo".
مثال: بعد هذه العملية، ستصبح القائمة: ["nasser", "nasser", "abdo", "hossam", "nasser"].

8. تغيير قيمة عنصر آخر
names[3] = "abdo"
هنا، نقوم بتغيير العنصر في الموضع الرابع (index 3) إلى "abdo".
مثال: القائمة الآن ستكون: ["nasser", "nasser", "abdo", "abdo", "nasser"].

9. إزالة عنصر باستخدام الدالة pop
names.pop(2)
في هذا السطر، نستخدم دالة pop لإزالة العنصر في الموضع الثالث (index 2).
مثال: بعد هذه العملية، ستكون القائمة: ["nasser", "nasser", "abdo", "nasser"].

10. عكس ترتيب العناصر في القائمة
names.reverse()
هنا، نقوم بعكس ترتيب العناصر في القائمة باستخدام دالة reverse.
مثال: بعد هذه العملية، ستصبح القائمة: ["nasser", "abdo", "nasser", "nasser"].

11. تعريف قائمة جديدة من الأرقام
nums = [5, 3, 4, 2, 1, 6]
في هذا السطر، نقوم بإنشاء قائمة جديدة باسم nums تحتوي على مجموعة من الأرقام.
مثال: لدينا الآن قائمة من الأرقام: [5, 3, 4, 2, 1, 6].

12. طباعة قائمة الأرقام
print(nums)
هنا، نقوم بطباعة محتويات قائمة nums. الناتج سيكون: [5, 3, 4, 2, 1, 6].

13. ترتيب قائمة الأرقام
nums.sort()
في هذا السطر، نستخدم دالة sort لترتيب الأرقام في القائمة.
مثال: بعد هذه العملية، ستكون القائمة مرتبة: [1, 2, 3, 4, 5, 6].

14. عكس ترتيب الأرقام بعد الترتيب (خطأ في السطر)
nums.reverse(nums.sort)
هنا، حاولنا استخدام دالة reverse مع sort بشكل غير صحيح. يجب أن نستخدم كل دالة بشكل منفصل.

15. ترتيب الأرقام بترتيب عكسي
nums.sort(reverse=True)
في هذا السطر، نقوم بترتيب الأرقام بترتيب عكسي باستخدام دالة sort مع المعامل reverse=True.
مثال: ستكون القائمة الآن: [6, 5, 4, 3, 2, 1].

ختام:
في الختام، لقد استعرضنا العديد من العمليات الأساسية التي يمكن القيام بها باستخدام القوائم في بايثون. من إضافة العناصر، إلى تغيير القيم، وإزالة العناصر، والترتيب. فهم هذه العمليات يعد أمرًا أساسيًا لتطوير مهارات البرمجة الخاصة بكم. 
شكرًا لكم على انتباهكم، وأرحب بأي أسئلة قد تكون لديكم!