القسم 8 الدرس 37: شرح كود بايثون بواسطة أحمد سامي
المقدمة  
أيها الطلاب، مرحبًا بكم في هذه المحاضرة حيث سنستعرض معًا شفرة برمجية بسيطة بلغة بايثون. سنتعرف على مفهوم الفئات (الكلاسات) وإنشاء الكائنات (الكائنات) منها وكيفية إضافة الخصائص إليها في وقت لاحق. هدفنا هو توضيح الأدوات الرئيسية التي ستساعدكم في استيعاب أساسيات البرمجة الكائنية.
المتن  

السطر: "# new class"  
هذا تعليق. في بايثون، أي نص يلي رمز  يتم تجاهله أثناء التنفيذ. تُستخدم التعليقات لتوضيح هدف أو بنية الكود للمبرمجين.
السطر: "class Plueprent:"  
يتم هنا تعريف فئة جديدة باسم Plueprent. الفئة تُعد بمثابة نموذج يُستخدم لإنشاء الكائنات (instances). هذا التعريف ينشئ فضاءً مخصصًا داخل الفئة يمكن فيما بعد إضافة المتغيرات والدوال إليها.
السطر: "    # vars"  
تعليق داخل الفئة يوضح أن هنا يمكن تعريف المتغيرات أو الخصائص الخاصة بالفئة. لم يتم إضافة أي متغير بعد، بل هو مجرد إشارة إلى أنه يمكن وضع المتغيرات هنا لاحقًا.
السطر: "    #functions"  
تعليق آخر يشير إلى إمكانية إضافة الدوال (الوظائف) الخاصة بالفئة. هذه الدوال تحدد سلوك الكائنات المستندة على هذه الفئة. لم يتم تعريف أي دالة في هذه المرحلة.
السطر: "    pass"  
تُستخدم كلمة pass كعنصر نائب أو تعليمة فارغة تُفيد بأنه لا يوجد تنفيذ لأي أمر داخل الفئة في هذا الوقت. هذا يسمح لنا بتعريف الفئة دون إضافة محتوى فعلياً في هذه المرحلة.
السطر: "# instance"  
تعليق يوضح بداية الجزء الخاص بإنشاء كائن من الفئة. نعتمد هنا على نموذج الفئة الذي تم تعريفه سابقًا.
السطر: "blokc1 = Plueprent()"  
يتم إنشاء كائن جديد باسم blokc1 من الفئة Plueprent. تقوم الأقواس () باستدعاء المُنشئ الافتراضي للفئة الذي تم إنشاؤه تلقائيًا في حال عدم تعريف دالة تهيئة مخصصة.
السطر: "blokc1.name = "b1""  
في هذا السطر نقوم بإضافة سمة جديدة للكائن blokc1 تُدعى name، ويتم تعيين القيمة النصية "b1" لها. هذه الخاصية لم تكن معرفة في داخل الفئة، لكن بايثون تتيح لنا إضافة سمات ديناميكيًا إلى الكائنات.
السطر: "blokc1.value = "44""  
بنفس الطريقة، نضيف سمة أخرى للكائن blokc1 تُدعى value ويتم تعيين القيمة النصية "44" لها. رغم أن النص يبدو وكأنه تعبير رياضي، فإنه يعتبر سلسلة نصية وليست عملية حسابية.  

الخاتمة  
باختصار، يوضح هذا المثال البسيط أساسيات البرمجة الكائنية في بايثون من خلال النقاط التالية:  

تعريف فئة جديدة باستخدام الكلمة المفتاحية class.  
استخدام pass كعنصر نائب داخل الفئة عند عدم وجود محتوى فعلي.  
إنشاء كائن من الفئة باستخدام المُنشئ الافتراضي، وإضافة سمات للكائن ديناميكيًا بعد إنشائه.  

هذه الخطوات تشكل حجر الأساس لفهم كيفية تنظيم الكود في بايثون، مما يساعدكم في بناء تطبيقات أكثر تعقيدًا في المستقبل. شكراً لاستماعكم، وأتمنى أن تكونوا قد استفدتم من الشرح.