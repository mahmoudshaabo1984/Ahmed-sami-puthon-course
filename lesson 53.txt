محاضرة: القسم 11 الدرس 53
مقدمة
صباح الخير أيها الطلاب. في جلستنا الأخيرة، تعلمتم كيفية استخدام PyInstaller لإنشاء ملف تنفيذي مستقل من سكربت بايثون الخاص بكم. ولكن، إذا قمتم بتشغيل هذا الملف التنفيذي، ربما لاحظتم ظهور نافذة سطر أوامر في الخلفية. على الرغم من أن هذا مفيد لأغراض تصحيح الأخطاء، إلا أنه قد يبدو غير احترافي للمنتج النهائي. اليوم، سنتعلم تعديلاً بسيطاً على أمر PyInstaller لإخفاء تلك النافذة وتقديم تجربة استخدام أفضل.

الجسم
سنقوم بتعديل أمر PyInstaller ليشمل خياراً جديداً. دعونا نلقي نظرة على الأمر.

تثبيت PyInstaller

pip install pyinstaller

هذا الأمر هو نفسه الذي استخدمناه سابقاً. تحتاجون فقط لتشغيله مرة واحدة لتثبيت مكتبة PyInstaller على نظامكم. إنها الخطوة الأساسية للحصول على الأداة التي تحتاجونها للتغليف.

تحويل السكربت إلى ملف تنفيذي مع إخفاء نافذة الأوامر

pyinstaller -w --onefile calculate_age.py

هذا هو أمرنا الجديد والمحسّن. كما ترون، أضفنا خياراً جديداً: -w.

-w: هذا هو المفتاح. الحرف -w يرمز إلى "windowed" أو "نافذة". يوجه هذا الخيار PyInstaller لإنشاء ملف تنفيذي لا يظهر مع نافذة سطر أوامر في الخلفية. هذا يجعل التطبيق يبدو أكثر احترافية وهو ممارسة موصى بها لتطبيقات الواجهة الرسومية التي قمنا ببنائها.

--onefile: هذا الخيار، كما تعلمنا، يجمع تطبيقكم بالكامل في ملف .exe واحد، مما يسهل مشاركته.

calculate_age.py: هذا هو اسم سكربت بايثون الخاص بنا. لاحظ أننا استخدمنا اسماً جديداً وأكثر وضوحاً لملفنا ليعكس الغرض منه.

الخلاصة
بإضافة علم بسيط واحد فقط، -w، قمنا بتحسين احترافية تطبيقنا بشكل كبير. هذا التغيير الصغير يوضح مبدأً هاماً في تطوير البرمجيات: الاهتمام بتجربة المستخدم. واجهة سلسة ونظيفة، حتى لتطبيق بسيط، تحدث فرقاً كبيراً.

الكود أدناه هو سكربت بايثون الكامل الذي سنقوم بتغليفه باستخدام أمرنا الجديد.




section 11 lesson 53 python code 


pip install pyinstaller

pyinstaller -w --onefile calculate_age.py
