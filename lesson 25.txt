العنوان: القسم 5، الدرس 25 - ما هي الدالة في بايثون

صباح الخير، طلابي!
أنا أحمد سامي، واليوم سنستكشف مفهومًا أساسيًا في برمجة بايثون: الدوال. تعتبر الدوال أساسية لأنها تسمح لنا بتجميع الكود وإعادة استخدامه بكفاءة. دعونا نتعمق في مثال الكود الذي أعددته ونفصله سطرًا بسطر.

فهم الدوال في بايثون
1. تعريف دالة
def myfun():
الشرح: 

هنا نقوم بتعريف دالة تسمى myfun. الكلمة المفتاحية def تشير إلى أننا نقوم بتعريف دالة.
الأقواس () تشير إلى أن هذه الدالة لا تأخذ أي معلمات. يمكن أن تأخذ الدوال مدخلات، لكن في هذه الحالة، لن نستخدم أيًا منها.


2. جسم الدالة
    print("inside the function")
    print("hello world")
الشرح: 

هذان السطران هما جسم الدالة، والذي يحتوي على الكود الذي سيتم تنفيذه كلما تم استدعاء الدالة.
السطر الأول يطبع الرسالة "inside the function"، والسطر الثاني يطبع "hello world". 
لذلك، عند استدعاء هذه الدالة، ستظهر هاتان الرسالتان في وحدة التحكم.


3. استدعاء الدالة (مُعلّق)
# myfun()
الشرح: 

هذا السطر مُعلّق، مما يعني أنه لن يتم تنفيذه عند تشغيل الكود.
إذا قمنا بإزالة الـ #، فإن استدعاء myfun() سيقوم بتنفيذ الدالة وعرض الرسائل المحددة بداخلها.


مثال دالة آخر
4. تعريف دالة جديدة
def say_hello():
الشرح:

هنا، نقوم بتعريف دالة أخرى باسم say_hello. مثل السابق، نستخدم الكلمة المفتاحية def لتعريفها، وهي أيضًا لا تأخذ أي معلمات.


5. الحصول على مدخلات المستخدم
    name = input("your name")
الشرح: 

هذا السطر يطلب من المستخدم إدخال اسمه. دالة input() تعرض الرسالة "your name" في وحدة التحكم، وتنتظر من المستخدم كتابة استجابته.
سيتم تخزين إدخال المستخدم في المتغير name.


6. طباعة تحية
    print("hi: " + name)
الشرح: 

هذا السطر يطبع تحية تتضمن الاسم الذي أدخله المستخدم. يتم دمج السلسلة "hi: " مع قيمة المتغير name.
على سبيل المثال، إذا كتب المستخدم "علي"، سيكون الناتج "hi: علي".


7. استدعاء الدالة مرتين
say_hello()
say_hello()
الشرح: 

هنا، نستدعي دالة say_hello مرتين. في كل مرة يتم استدعاؤها، ستطلب من المستخدم إدخال اسمه وتطبع تحية.
لذا، إذا قمت بتشغيل هذا الكود، ستُطلب منك إدخال اسمك مرتين، وسيرحب بك البرنامج في كل مرة بناءً على المدخلات التي تقدمها.


الخاتمة
في الختام، تعتبر الدوال في بايثون وسيلة لتنظيم وإعادة استخدام الكود بكفاءة. اليوم، قمنا بفحص كيفية تعريف دالة، وتنفيذ جسمها، واستدعائها عدة مرات.

تعريف دالة باستخدام الكلمة المفتاحية def.
استخدام الإدخال للحصول على بيانات من المستخدمين.
طباعة ناتج بناءً على إدخال المستخدم.

فهم الدوال أمر حيوي في البرمجة. تساعدنا على تقسيم المشكلات المعقدة إلى قطع أصغر يمكن إدارتها من خلال الكود. 
شكرًا على انتباهكم! إذا كان لديكم أي أسئلة أو تحتاجون إلى توضيح حول أي جزء من الدرس، فلا تترددوا في طرحها!