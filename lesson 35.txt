### **القسم 7، الدرس 35: شرح حلقة for في لغة البايثون مع الدكتور أحمد سامي**

---

#### **المقدمة:**
مرحبًا بكم طلابي الأعزاء في **القسم 7، الدرس 35**! اليوم سنتحدث عن **حلقات for** في لغة البايثون. حلقات for هي واحدة من المفاهيم الأساسية في البرمجة، حيث تتيح لنا التكرار عبر عناصر متسلسلة مثل القوائم (lists) والنطاقات (ranges) وغيرها. بنهاية هذه المحاضرة، ستتمكنون من استخدام حلقات for بفعالية، والتعامل مع القوائم، والتحكم في تدفق الحلقات باستخدام أوامر مثل `break` و`continue`. لنبدأ!

---

### **الموضوع:**

#### **1. حلقة for الأساسية مع `range()`**
```python
# for loop
# from 0 to 9
for i in range(0, 10):
    print(i)
```
- **الشرح:**
  - `range(0, 10)` يُنشئ تسلسلًا من الأرقام يبدأ من 0 (شامل) وينتهي عند 10 (غير شامل). أي أنه يُنتج الأرقام من 0 إلى 9.
  - الحلقة `for` تتكرر عبر كل رقم في هذا التسلسل، والمتغير `i` يأخذ كل قيمة على حدة.
  - `print(i)` يُخرج القيمة الحالية لـ `i` إلى الشاشة.
- **مثال:**
  - الناتج: `0 1 2 3 4 5 6 7 8 9`

---

#### **2. حلقة for مع `range()` تتضمن القيمة النهائية**
```python
# for loop
# from 0 to 10
for i in range(0, 11):
    print(i)
```
- **الشرح:**
  - هنا، `range(0, 11)` يُنشئ تسلسلًا من الأرقام من 0 إلى 10 (شامل).
  - الحلقة تطبع كل رقم في هذا النطاق.
- **مثال:**
  - الناتج: `0 1 2 3 4 5 6 7 8 9 10`

---

#### **3. حلقة for مع فهارس القوائم (indices)**
```python
# create a list that contains 4 items
names = ["ahmed", "jermaine", "sara", "ali"]
for i in range(len(names)):
    print(i)
```
- **الشرح:**
  - `names` هي قائمة تحتوي على 4 عناصر.
  - `len(names)` تُرجع طول القائمة، وهو 4.
  - `range(len(names))` يُنشئ أرقامًا من 0 إلى 3 (فهارس القائمة).
  - الحلقة تطبع الفهارس (`i`) الخاصة بالقائمة.
- **مثال:**
  - الناتج: `0 1 2 3`

---

#### **4. حلقة for لطباعة عناصر القائمة باستخدام الفهارس**
```python
# create a list that contains 4 items
# printing the items in the list 
names = ["ahmed", "jermaine", "sara", "ali"]
for i in range(len(names)):
    print(names[i])
```
- **الشرح:**
  - مشابه للمثال السابق، ولكن بدلًا من طباعة الفهارس، يتم طباعة العناصر الفعلية في القائمة باستخدام `names[i]`.
- **مثال:**
  - الناتج: `ahmed jermaine sara ali`

---

#### **5. حلقة for للتكرار مباشرة على عناصر القائمة**
```python
# the second way to create a for loop
names = ["ahmed", "jermaine", "sara", "ali"]
for person in names:
    print(person)
```
- **الشرح:**
  - هذه طريقة أكثر "بايثونية" للتكرار على القوائم. بدلًا من استخدام الفهارس، يتم تعيين كل عنصر في القائمة مباشرة إلى المتغير `person`.
  - `print(person)` يُخرج كل اسم في القائمة.
- **مثال:**
  - الناتج: `ahmed jermaine sara ali`

---

#### **6. حلقة for مع أمر `break`**
```python
# Use if statement with break
names = ["ahmed", "jermaine", "sara", "ali"]
for person in names:
    print(person)
    if person == "sara":
        break
```
- **الشرح:**
  - الحلقة تتكرر على القائمة `names`.
  - عندما تتحقق الشرط `person == "sara"`، يتم تنفيذ أمر `break` الذي يوقف الحلقة فورًا.
- **مثال:**
  - الناتج: `ahmed jermaine sara`

---

#### **7. حلقة for مع `break` بشرط مختلف**
```python
# change to jermaine
names = ["ahmed", "jermaine", "sara", "ali"]
for person in names:
    print(person)
    if person == "jermaine":
        break
```
- **الشرح:**
  - مشابه للمثال السابق، ولكن الحلقة تتوقف عندما يكون `person == "jermaine"`.
- **مثال:**
  - الناتج: `ahmed jermaine`

---

#### **8. حلقة for مع أمر `continue`**
```python
# Use if statement with continue
names = ["ahmed", "jermaine", "sara", "ali"]
for person in names:
    print(person)
    if person == "jermaine":
        continue
```
- **الشرح:**
  - أمر `continue` يتخطى بقية جسم الحلقة للدورة الحالية إذا تحقق الشرط.
  - في هذه الحالة، لا يحدث شيء لأن `person` لا يساوي أبدًا `"jermaine"` (لاحظ الخطأ المطبعي في الكود).
- **مثال:**
  - الناتج: `ahmed jermaine sara ali`

---

#### **9. حلقة for مع `continue` وتخطي عنصر معين**
```python
# Opposite the loop
# Use if statement with continue
names = ["ahmed", "jermaine", "sara", "ali"]
for person in names:
    if person == "jermaine":
        continue
    print(person)
```
- **الشرح:**
  - عندما يكون `person == "jermaine"`، يتم تنفيذ أمر `continue` الذي يتخطى أمر `print(person)` لتلك الدورة.
  - هذا يؤدي إلى استبعاد `"jermaine"` من الناتج.
- **مثال:**
  - الناتج: `ahmed sara ali`

---

### **الخاتمة:**
في هذه المحاضرة، استعرضنا قوة **حلقات for** في لغة البايثون. تعلمنا كيفية:
1. التكرار عبر نطاق من الأرقام باستخدام `range()`.
2. التكرار عبر القوائم باستخدام الفهارس أو العناصر مباشرة.
3. التحكم في تدفق الحلقات باستخدام `break` و`continue`.

هذه المفاهيم أساسية لكتابة كود بايثون فعّال وسهل القراءة. تدربوا على هذه الأمثلة، وسوف تتقنون حلقات for في وقت قصير. تذكروا دائمًا أن البرمجة تشبه استكشاف الكون — مليئة بالإمكانيات اللامتناهية! إلى اللقاء في المحاضرة القادمة، واستمروا في البرمجة والاستكشاف. وداعًا!

---

