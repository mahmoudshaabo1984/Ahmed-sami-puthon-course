

محاضرة: القسم 11 الدرس 51 الجزء 2

مقدمة في تطوير الواجهات الرسومية باستخدام tkinter

صباح الخير أيها الطلاب، اليوم نبدأ استكشافنا في عالم تطوير الواجهات الرسومية (GUI) باستخدام مكتبة tkinter القياسية في بايثون. توفر الواجهة الرسومية طريقة مرئية للمستخدم للتفاعل مع البرنامج، باستخدام عناصر مثل النوافذ، الأزرار، وحقول النص، وهو ما يمثل نقلة نوعية عن واجهة سطر الأوامر التي اعتدنا عليها. الكود الذي سنقوم بتحليله اليوم ينشئ نافذة بسيطة لتطبيق حساب العمر.

شرح مفصل للكود

دعونا نقوم بتحليل الكود البرمجي الموفر سطرًا بسطر لفهم كيفية بناء أول تطبيق واجهة رسومية لدينا.

from tkinter import *

هذا السطر هو خطوتنا الأولى، حيث يقوم باستيراد جميع الفئات والدوال والمتغيرات من مكتبة tkinter. الرمز * يعني "الكل". عن طريق القيام بذلك، يمكننا استخدام Tk() وLabel ومكونات tkinter الأخرى مباشرةً دون الحاجة إلى إضافة tkinter. قبلها.

age_app = Tk()

هنا، نقوم بإنشاء نافذة التطبيق الرئيسية، والتي تُعرف أيضاً بالنافذة الجذرية. فئة Tk() هي الفئة الأساسية في tkinter وهي المسؤولة عن إنشاء نافذة التطبيق الرئيسية. قمنا بتعيين هذا الكائن إلى متغير اسمه age_app لسهولة الوصول إليه في جميع أنحاء الكود.

age_app.title("حساب عمرك")

هذا السطر يخصص نافذتنا الرئيسية. نحن نستدعي الدالة .title() على الكائن age_app. النص "حساب عمرك" يحدد العنوان الذي سيظهر في شريط عنوان نافذة التطبيق.

age_app.geometry("400x200")

تُستخدم الدالة .geometry() لتحديد الأبعاد الأولية للنافذة. النص "400x200" يحدد عرض النافذة (400 بكسل) وارتفاعها (200 بكسل). هذا يسمح لنا بالتحكم في حجم نافذة تطبيقنا عند فتحها لأول مرة.

the_text = Label(age_app, text="اكتب عمرك", height=2, font=("Arial", 20))

هذا السطر يقدم لنا أول عنصر واجهة رسومية، وهو Label. يُستخدم Label لعرض نص ثابت أو صور في النافذة. نحن نقوم بإنشاء كائن Label جديد وتعيينه لمتغير the_text.

دعونا نلقي نظرة على وسائطه:

age_app: هذا هو الوسيط الأول وهو يحدد العنصر الأب. في هذه الحالة، سيتم وضع عنصر Label الخاص بنا داخل نافذة age_app.

text="اكتب عمرك": هذا الوسيط يحدد النص الذي سيعرضه الـLabel.

height=2: هذا يحدد ارتفاع الـLabel بوحدات النص.

font=("Arial", 20): هذا هو عبارة عن tuple يحدد عائلة الخط ("Arial") وحجم الخط (20).

the_text.pack()

تُعد الدالة .pack() إحدى مديري الأبعاد في tkinter. مهمتها هي ترتيب العنصر في كتلة داخل العنصر الأب. من خلال استدعاء the_text.pack()، نحن نطلب من tkinter وضع كائن Label الخاص بنا (the_text) في نافذة age_app الرئيسية.

age = StringVar()

هذا السطر ينشئ نوعًا خاصًا من المتغيرات من tkinter يسمى StringVar. تُستخدم هذه الأنواع من المتغيرات لحفظ قيم العناصر التي يمكن أن تتغير، مثل حقول إدخال النص. استخدام StringVar يسمح للعنصر بالتحديث تلقائيًا عندما تتغير قيمته، والعكس صحيح.

age.set("00")

تُستخدم الدالة .set() لتعيين قيمة أولية لـStringVar. في هذه الحالة، نحن نعيّن قيمة متغير age إلى السلسلة النصية "00".

age_app.mainloop()

هذا السطر ضروري وحاسم لكل تطبيق tkinter. الدالة .mainloop() تبدأ حلقة أحداث التطبيق. تستمع حلقة الأحداث إلى الأوامر التي يقوم بها المستخدم مثل نقرات الماوس، ضغطات لوحة المفاتيح، وتغيير حجم النافذة، وتحافظ على النافذة معروضة على الشاشة. لن يعمل البرنامج ويعرض النافذة بدون هذا السطر.

الخلاصة

في محاضرة اليوم، قمنا بنجاح ببناء أول تطبيق واجهة رسومية لنا. تعلمنا كيفية إنشاء نافذة تطبيق رئيسية، وتعيين خصائصها مثل العنوان والحجم، وإضافة عنصر Label بسيط لعرض النص. الأهم من ذلك، فهمنا الغرض من الدالة mainloop()، والتي تعد أساسية لأي برنامج tkinter لكي يعمل.

هذه مجرد بداية رحلتنا. سنبني على هذه المفاهيم في المحاضرات القادمة، وسنضيف المزيد من العناصر مثل الأزرار وحقول إدخال النص لجعل تطبيقنا تفاعليًا. يرجى مراجعة الكود أدناه، ولا تترددوا في طرح أي أسئلة.

الكود الكامل باللغة بايثون للقسم 11 الدرس 51 الجزء 2




from tkinter import * # استيراد جميع المكونات من مكتبة tkinter.

age_app = Tk() # إنشاء نافذة التطبيق الرئيسية.

age_app.title("حساب عمرك") # تعيين عنوان نافذة التطبيق.

age_app.geometry("400x200") # تعيين أبعاد النافذة (العرض x الارتفاع).

the_text = Label(age_app, text="اكتب عمرك", height=2, font=("Arial", 20)) # إنشاء عنصر واجهة رسومية من نوع نص.

the_text.pack() # وضع عنصر النص داخل النافذة الرئيسية.

age = StringVar() # إنشاء متغير خاص بـ tkinter لحفظ سلسلة نصية.

age.set("00") # تعيين القيمة الافتراضية للمتغير 'age'.

age_app.mainloop() # تشغيل حلقة أحداث التطبيق لإبقائه مفتوحًا ومتفاعلاً.
