القسم 9 الدرس 41: كود بايثون  
محاضرة بواسطة أحمد سامي

المقدمة  
السلام عليكم أيها الطلاب، اليوم سنتعرف على بعض الأوامر الأساسية التي تساعدنا على التأكد من إعداد بيئة العمل الخاصة بلغة بايثون. تشمل المحاضرة التحقق من إصدار بايثون والتأكد من عمل مدير الحزم pip بشكل صحيح. هذه الأوامر مهمة جدًا خاصةً عندما تبدأون بمشاريع برمجية بلغة بايثون لضمان التوافق وتوافر كل المتطلبات اللازمة.

المتن  
لنقم بتفصيل الأوامر خطوة بخطوة:

أمر pip  
عند كتابتكم الأمر  
pip  
والضغط على Enter، فإنكم تقومون بتشغيل مدير الحزم الخاص ببايثون الذي يحمل اسم pip. في حالتنا الافتراضية، يظهر لكم البرنامج قائمة بالأوامر المتاحة مع شرح موجز لكل منها. يُستخدم pip لتثبيت المكتبات الخارجية وإدارة التبعيات في مشاريعكم.
التحقق من إصدار بايثون  
لنعرف إصدار بايثون المثبت على نظامكم، يُمكنكم كتابة الأمر:  
python\ --version  
سيقوم هذا الأمر بعرض رقم الإصدار، مثل Python\ 3.9.1. هذه الخطوة ضرورية للتأكد من أنكم تستخدمون الإصدار المناسب لمتطلبات مشروعكم.
للأجهزة التي تعمل بنظام Windows 10  
إذا كنتم تستخدمون Windows 10، فقد يكون من الأفضل استخدام الأمر:  
py\ --version  
حيث أن مشغل بايثون py يكون مثبتًا بشكل افتراضي على أنظمة Windows، ويمكنه التعامل مع إصدارات متعددة من بايثون. باستخدام هذا الأمر يمكنكم التأكد من الإصدار الافتراضي الذي يستخدمه النظام.
التحقق من إصدار pip  
أخيرًا، للتأكد من تثبيت pip وبروز الإصدار الحالي عليه، يُمكنكم كتابة الأمر:  
pip\ --version  
سيظهر لكم رقم إصدار pip بالإضافة إلى مسار التثبيت الخاص به. هذه المعلومة مهمة لحل مشاكل التثبيت أو تحديث المكتبات عند الحاجة.


الخاتمة  
باختصار، في هذه المحاضرة تعرفنا على كيفية التأكد من إعداد بيئة بايثون بشكل صحيح باستخدام أوامر بسيطة:  

التحقق من إصدار بايثون باستخدام python\ --version أو py\ --version على Windows 10،  
والتأكد من عمل pip من خلال الأمر pip\ --version.  

إن ممارسة هذه الأوامر بانتظام ستساعدكم على التعامل بثقة مع مشاريعكم البرمجية والتأكد من أن كل شيء يعمل بشكل سلس. شكراً لاستماعكم ونتطلع لرؤيتكم تطبقون ما تعلمتموه في مشاريعكم القادمة.