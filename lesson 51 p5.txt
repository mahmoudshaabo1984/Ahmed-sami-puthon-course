محاضرة: القسم 11 الدرس 51 الجزء 5

تحويل برنامج بايثون إلى تطبيق مستقل

مقدمة

صباح الخير أيها الطلاب. لقد أكملنا الآن كل الخطوات اللازمة لإنشاء تطبيق حاسبة العمر. لكن حتى الآن، لا يمكن تشغيل برنامجنا إلا إذا كان جهاز الكمبيوتر مثبتًا عليه مترجم بايثون. في هذه المحاضرة النهائية، سنتعلم كيفية استخدام أداة قوية تسمى PyInstaller لتحويل الكود إلى ملف تنفيذي (.exe) يمكن لأي شخص استخدامه دون الحاجة إلى تثبيت بايثون.

شرح الأوامر

تتم عملية تحويل الكود باستخدام سطر الأوامر (Command Line). سنتعرف على ثلاثة أوامر رئيسية:

تثبيت PyInstaller

الأمر: pip install pyinstaller

pip: هو مدير حزم بايثون القياسي. وظيفته هي مساعدتنا في تثبيت المكتبات والبرامج التي لا تأتي مع بايثون بشكل افتراضي.

install: هو أمر التثبيت.

pyinstaller: هو اسم الأداة التي نحتاجها. هذه الأداة تقوم بتحليل الكود الخاص بنا وتضمين جميع المكتبات اللازمة فيه، ثم تحويله إلى ملف تنفيذي.

تحويل الكود إلى ملف تنفيذي

الأمر: pyinstaller --onefile lesson51p5.py

pyinstaller: اسم البرنامج الذي سنقوم بتشغيله.

--onefile: هذه إضافة مهمة جدًا. تخبر الأداة بأننا نريد تجميع كل شيء (الكود، مكتبة Tkinter، أي مكتبات أخرى) في ملف تنفيذي واحد فقط. بدون هذا الأمر، ستقوم الأداة بإنشاء مجلد يحتوي على عدة ملفات.

lesson51p5.py: اسم ملف الكود البرمجي الخاص بنا. يجب أن تكون في نفس المجلد الذي يحتوي على هذا الملف لتنجح العملية.

العثور على الملف التنفيذي

الأمر: explorer .

بعد اكتمال عملية التحويل، تقوم الأداة بإنشاء مجلد جديد اسمه dist (اختصار لـ "distribution" أو "توزيع").

هذا الأمر، الذي يعمل على نظام ويندوز، يفتح مستكشف الملفات (File Explorer) للمجلد الحالي (.)، مما يسهل عليك العثور على المجلد dist والملف التنفيذي الجديد lesson51p5.exe الموجود بداخله.

الخلاصة

تهانينا! لقد تعلمتم الآن كيفية تحويل كود بايثون إلى تطبيق احترافي. هذه الخطوة النهائية هي ما يميز البرامج القابلة للتوزيع عن مجرد الأكواد البرمجية. باستخدام PyInstaller، يمكنك مشاركة إبداعاتك مع أي شخص، حتى لو لم يكن لديه أي معرفة بلغة بايثون.

الكود الموجود أدناه هو نفس الكود النهائي الذي عملنا عليه في المحاضرة السابقة، وهو الملف الذي سنستخدمه مع أمر pyinstaller.


section 11 lesson 51p5 python code 



pip install pyinstaller # This command uses the **pip** package manager to **install** the pyinstaller

pyinstaller --onefile 51p4.py # This command uses the installed pyinstaller library to turn the Python script **`51p4.py** into a single, standalone **.exe executable file.


explorer .  # This command, used on Windows, opens a File Explorer window for the current directory


