عنوان المحاضرة: القسم 4، الدرس 23 - فهم المجموعات في بايثون

صباح الخير، أيها الطلاب!
اليوم، سنتناول مفهوم المجموعات في بايثون من خلال كود بسيط. سأقوم بشرح كل سطر من الكود لنفهم كيفية عمل المجموعات. دعونا نبدأ!

1. تعريف مجموعة
fruits = {"banana", "apple", "mango"}
في هذا السطر، نقوم بإنشاء مجموعة باسم fruits تحتوي على ثلاثة عناصر: "موز"، "تفاح"، و"مانجو". المجموعات هي مجموعة من العناصر الفريدة، مما يعني أنه لا يمكن أن تحتوي المجموعة على عناصر مكررة.

2. التحقق من نوع المجموعة
print(type(fruits))
هنا، نقوم بطباعة نوع المتغير fruits. الناتج سيظهر أنه من نوع set. هذا يساعدنا على التأكد من أننا نتعامل مع هيكل بيانات من نوع مجموعة.

3. طباعة محتويات المجموعة
print(fruits)
في هذا السطر، نقوم بطباعة محتويات المجموعة fruits. الناتج سيعرض العناصر الموجودة في المجموعة. تذكر أن الترتيب قد لا يكون هو نفسه في كل مرة، لأن المجموعات غير مرتبة.

4. إنشاء مجموعة جديدة
noms_set = {1, 2, 3, 4, 5, 6, 7}
في هذا السطر، نقوم بإنشاء مجموعة جديدة باسم noms_set تحتوي على الأرقام من 1 إلى 7. مثل المجموعة السابقة، يمكن أن تحتوي هذه المجموعة أيضًا على عناصر فريدة فقط.

5. طباعة المجموعة الجديدة
print(noms_set)
هنا، نقوم بطباعة محتويات noms_set. هذا سيعرض الأرقام التي قمنا بتعريفها في المجموعة.

6. التحقق من نوع المجموعة الجديدة
print(type(noms_set))
مرة أخرى، نقوم بالتحقق من نوع المتغير noms_set. الناتج سيؤكد أنه أيضًا من نوع set.

7. التحقق من وجود عنصر في المجموعة
print("grapes" in fruits)
في هذا السطر، نتحقق مما إذا كان العنصر "عنب" موجودًا في مجموعة fruits. الناتج سيكون إما True أو False. في هذه المرحلة، سيظهر لنا False لأن "عنب" ليس موجودًا بعد في المجموعة.

8. إضافة عنصر إلى المجموعة
fruits.add("grapes")
الآن، نقوم بإضافة "عنب" إلى مجموعة fruits. يتم ذلك باستخدام دالة add.

9. طباعة المجموعة بعد الإضافة
print(fruits)
هنا، نقوم بطباعة مجموعة fruits مرة أخرى لرؤية المحتويات المحدثة. الآن، سيكون الناتج قد تضمن "عنب".

10. إزالة عنصر من المجموعة
fruits.remove("banana")
في هذا السطر، نقوم بإزالة "موز" من مجموعة fruits باستخدام دالة remove. إذا كانت "موز" موجودة في المجموعة، فسيتم إزالتها بنجاح.

11. طباعة المجموعة بعد الإزالة
print(fruits)
نقوم بطباعة مجموعة fruits مرة أخرى للتأكيد على أن "موز" قد تمت إزالته.

12. إضافة عنصر مرة أخرى
fruits.add("apple")
هنا، نحاول إضافة "تفاح" إلى مجموعة fruits مرة أخرى. لكن بما أن "تفاح" موجود بالفعل في المجموعة، فلن يحدث أي تغيير.

13. طباعة المجموعة مرة أخرى
print(fruits)
نقوم بطباعة مجموعة fruits مرة أخرى. رغم محاولتنا إضافة "تفاح" مجددًا، ستبقى المجموعة كما هي لأن المجموعات تحتوي فقط على عناصر فريدة.

14. حذف المجموعة
del fruits
في هذا السطر، نقوم بحذف مجموعة fruits بالكامل باستخدام الأمر del. بعد هذا، لن نتمكن من الوصول إلى المتغير fruits.

15. محاولة طباعة المجموعة المحذوفة
print(fruits)
هنا، نحاول طباعة مجموعة fruits مرة أخرى. هذا سيؤدي إلى ظهور خطأ لأن المجموعة قد تم حذفها ولم تعد موجودة في البرنامج.

16. مسح العناصر من المجموعة (معلق)
# fruits.clear()
هذا السطر معلق، ولكن إذا تم تنفيذه، فإنه سيمسح جميع العناصر من مجموعة fruits دون حذف المجموعة نفسها.

17. طباعة المجموعة بعد المسح (معلق)
# print(fruits)
مرة أخرى، هذا السطر معلق. إذا تم تنفيذه بعد مسح المجموعة، فإنه سيظهر مجموعة فارغة.

ختام:
في الختام، لقد استعرضنا مفهوم المجموعات في بايثون، بما في ذلك كيفية إنشائها، وإضافة العناصر، وإزالتها، والتحقق من وجود عناصر داخل المجموعة. تذكروا أن المجموعات هي مجموعات فريدة ولا تسمح بالقيم المكررة.
شكرًا لكم على انتباهكم، وأنا هنا للإجابة على أي أسئلة قد تكون لديكم!