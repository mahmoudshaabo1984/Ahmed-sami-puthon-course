محاضرة: القسم 11 الدرس 51 الجزء 4

إضافة وظيفة إلى عنصر Button

صباح الخير أيها الطلاب. هدفنا اليوم هو إعطاء الحياة للزر الذي أنشأناه في الجلسة الماضية. حاليًا، النقر على زر "حساب" لا يفعل شيئًا. نحن بحاجة إلى إخبار برنامجنا بما يجب فعله عند حدوث هذا الإجراء المحدد (النقر على الزر). سنحقق ذلك عن طريق إنشاء دالة بايثون وربطها بالزر. سنتعلم أيضًا كيفية استخدام وحدة جديدة لعرض النتائج في نافذة منبثقة.

شرح مفصل للكود

دعونا نفكك الأسطر الجديدة من الكود ونفهم أهميتها.

from tkinter import messagebox

هذا هو السطر الجديد الأول. بينما توفر مكتبة tkinter مجموعة واسعة من العناصر، فإن بعض الوظائف، مثل مربعات الرسائل المنبثقة، موجودة في وحدة منفصلة. هذا السطر يستورد تحديدًا وحدة messagebox، مما يسمح لنا باستخدام دوالها لعرض نوافذ منبثقة إعلامية للمستخدم.

def calc():

هذا السطر يعرف دالة جديدة باسم calc. في بايثون، نستخدم الكلمة المفتاحية def لإنشاء دالة. سيتم تنفيذ كل الكود المتبوع بمسافة بادئة أسفل هذا السطر في كل مرة يتم فيها استدعاء دالة calc. نحن نضع كل منطق الحساب لدينا داخل هذه الدالة.

the_age_value = int(age.get())

داخل دالة calc، نحتاج أولاً إلى استرداد القيمة التي كتبها المستخدم في عنصر Entry. تسترد الدالة age.get() القيمة النصية المخزنة حاليًا في متغير StringVar الخاص بنا، age. بما أننا نحتاج إلى إجراء عمليات رياضية، يجب علينا تحويل هذه القيمة النصية إلى عدد صحيح باستخدام الدالة int(). يتم تخزين النتيجة في متغير the_age_value.

months = the_age_value * 12

هذا حساب بسيط يضرب عمر المستخدم في 12 لإيجاد العمر بالأشهر. يتم تخزين النتيجة في متغير months. وبالمثل، نحسب weeks و days.

line_one = f"عمرك بالأشهر هو: {months}"

هنا، نستخدم f-string (نص منسق) لإنشاء سلسلة نصية نظيفة وسهلة القراءة للمخرجات. الحرف f قبل علامة الاقتباس يوضح أن هذا نص منسق. يمكننا بعد ذلك تضمين المتغيرات مباشرة داخل النص عن طريق وضعها بين قوسين معقوفين {}. هذا ينشئ رسالة واضحة مثل "عمرك بالأشهر هو: 240" إذا كان العمر 20. نفعل الشيء نفسه لـline_two وline_three.

all_lines = [line_one, line_two, line_three]

هذا السطر ينشئ قائمة بايثون بسيطة لتخزين جميع سلاسل المخرجات المنسقة الثلاثة. هذه طريقة مريحة لتجميع البيانات التي نريد عرضها.

messagebox.showinfo("عمرك بجميع وحدات الوقت", "\n".join(all_lines))

هذا هو الجزء الأخير والأكثر إثارة. نحن نستدعي دالة showinfo من وحدة messagebox لعرض نافذة منبثقة.

الوسيط الأول، "عمرك بجميع وحدات الوقت"، يحدد عنوان النافذة المنبثقة.

الوسيط الثاني، "\n".join(all_lines)، هو محتوى الرسالة. الدالة .join() هي دالة قوية لسلسلة نصية تقوم بدمج جميع العناصر في قائمة إلى سلسلة نصية واحدة، باستخدام السلسلة التي تم استدعاؤها عليها ("\n") كفاصل. في هذه الحالة، تقوم بإدخال حرف سطر جديد بين كل سطر، مما يضمن ظهور كل نتيجة حساب على سطر جديد في النافذة المنبثقة.

button = Button(..., command=calc)

هذه هي الإضافة الأخيرة والأكثر أهمية. لقد قمنا بتعديل إنشاء عنصر Button ليشمل الوسيط command. قيمة هذا الوسيط هي اسم الدالة التي نريد تنفيذها عند النقر على الزر. عندما ينقر المستخدم على زر "حساب"، تقوم مكتبة tkinter تلقائيًا باستدعاء دالة calc لنا، مما يشغل كل الكود داخلها.

الخلاصة

في هذه المحاضرة، أكملنا الوظيفة الأساسية لتطبيق حاسبة العمر. لقد تعلمتم الآن كيفية تعريف واستخدام الدوال في tkinter، وكيفية عرض المعلومات للمستخدم باستخدام وحدة messagebox، والأهم من ذلك، كيفية ربط حدث النقر على الزر بدالة معينة باستخدام الوسيط command. يمكن لتطبيقنا الآن استقبال إدخال المستخدم، وإجراء حساب، وتقديم النتائج بطريقة سهلة الاستخدام.

هذه هي نسخة كاملة وعاملة من تطبيقنا البسيط. يرجى مراجعة الكود أدناه لرؤية كل الأجزاء تعمل معًا.

الكود الكامل بلغة بايثون للقسم 11 الدرس 51 الجزء 4



# استيراد مكتبة tkinter
from tkinter import * # استيراد كل العناصر من مكتبة Tkinter.
from tkinter import messagebox # استيراد وحدة messagebox للنوافذ المنبثقة.


# إنشاء نافذة التطبيق الرئيسية
age_app = Tk() # يقوم بإنشاء نافذة التطبيق الرئيسية.

# تغيير عنوان التطبيق
age_app.title("حساب عمرك") # يقوم بتعيين عنوان النافذة.


# تعيين الأبعاد
age_app.geometry("400x200") # يقوم بتعيين عرض وارتفاع النافذة بالبكسل.

# كتابة عنوان العمر
the_text =Label(age_app, text="اكتب عمرك", height=2, font=("Arial", 20)) # يقوم بإنشاء نص لإرشاد المستخدم.

# وضع النص داخل النافذة الرئيسية
the_text.pack() # يضع عنصر النص داخل النافذة.


# متغيرات العمر
age = StringVar() # ينشئ متغير Tkinter خاص لتخزين مدخلات العمر.

# تعيين القيمة الافتراضية للعمر
age.set("00") # يحدد القيمة الأولية لمتغير العمر بـ "00".


# إنشاء حقل الإدخال للعمر
age_input = Entry(age_app, width=2 , font=("Arial", 30), textvariable=age) # ينشئ حقل إدخال للمستخدم لإدخال عمره.


# وضع حقل الإدخال في النافذة الرئيسية
age_input.pack() # يضع عنصر حقل الإدخال داخل النافذة.


# إنشاء دالة الحساب
def calc(): # يعرف دالة لتنفيذ حساب العمر عند استدعائها.
    # الحصول على العمر بالسنوات وتحويله إلى عدد صحيح
    the_age_value = int(age.get()) # يسترد القيمة من متغير `age` ويحولها إلى عدد صحيح.
    
    # الحصول على وحدات الوقت
    months = the_age_value * 12 # يحسب عدد الأشهر.
    weeks = months * 4 # يحسب عدد الأسابيع.
    days = the_age_value * 365 # يحسب عدد الأيام.
    
    # إنشاء سطور النص
    line_one = f"عمرك بالأشهر هو: {months}" # ينسق سلسلة نصية لعرض العمر بالأشهر.
    line_two = f"عمرك بالأسابيع هو: {weeks}" # ينسق سلسلة نصية لعرض العمر بالأسابيع.
    line_three = f"عمرك بالأيام هو: {days}" # ينسق سلسلة نصية لعرض العمر بالأيام.
    
    # تجميع كل السطور
    all_lines = [line_one, line_two, line_three] # يدمج كل السطور في قائمة.
    
    # عرض نافذة الرسالة
    messagebox.showinfo("عمرك بجميع وحدات الوقت", "\n".join(all_lines)) # يعرض نافذة منبثقة مع تفاصيل العمر المحسوب.


# إنشاء زر الحساب
button = Button(age_app, text="حساب", width=20, height=2, bg="#0e1063", fg="white", borderwidth=0, command=calc) # ينشئ زرًا ينفذ دالة `calc` عند النقر عليه.
# وضع الزر في النافذة الرئيسية
button.pack() # يضع عنصر الزر داخل النافذة.


# تشغيل التطبيق بشكل لا نهائي
age_app.mainloop() # يبدأ حلقة أحداث Tkinter لتشغيل التطبيق والانتظار لتفاعل المستخدم.
